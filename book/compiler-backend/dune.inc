(alias
 (name runtest)
 (deps
  (:x README.md)
  (package core)
  (package mdx)
  (package ppx_jane)
  (:y9 examples/back-end-embed/embed_me1.ml)
  (:y8 examples/back-end-embed/embed_me2.ml)
  (:y7 examples/back-end/alternate_list/alternate_list.ml)
  (:y6 examples/back-end/bench_patterns/bench_patterns.ml)
  (:y5 examples/back-end/bench_poly_and_mono/bench_poly_and_mono.ml)
  (:y4 examples/back-end/compare_mono.ml)
  (:y3 examples/back-end/compare_poly.ml)
  (:y2 examples/back-end/pattern_monomorphic_large.ml)
  (:y1 examples/back-end/pattern_monomorphic_small.ml)
  (:y0 examples/back-end/pattern_polymorphic.ml)
  (source_tree examples/back-end)
  (source_tree examples/back-end-embed)
  (source_tree examples/back-end/alternate_list)
  (source_tree examples/back-end/bench_patterns)
  (source_tree examples/back-end/bench_poly_and_mono)
  prelude.ml)
 (locks ../../global-lock)
 (action
  (progn
   (run ocaml-mdx test --prelude=prelude.ml --direction=to-md %{x})
   (diff? %{x} %{x}.corrected)
   (diff? %{y9} %{y9}.corrected)
   (diff? %{y8} %{y8}.corrected)
   (diff? %{y7} %{y7}.corrected)
   (diff? %{y6} %{y6}.corrected)
   (diff? %{y5} %{y5}.corrected)
   (diff? %{y4} %{y4}.corrected)
   (diff? %{y3} %{y3}.corrected)
   (diff? %{y2} %{y2}.corrected)
   (diff? %{y1} %{y1}.corrected)
   (diff? %{y0} %{y0}.corrected))))

(alias
 (name runtest-all)
 (deps
  (:x README.md)
  (package core)
  (package mdx)
  (package ppx_jane)
  (:y9 examples/back-end-embed/embed_me1.ml)
  (:y8 examples/back-end-embed/embed_me2.ml)
  (:y7 examples/back-end/alternate_list/alternate_list.ml)
  (:y6 examples/back-end/bench_patterns/bench_patterns.ml)
  (:y5 examples/back-end/bench_poly_and_mono/bench_poly_and_mono.ml)
  (:y4 examples/back-end/compare_mono.ml)
  (:y3 examples/back-end/compare_poly.ml)
  (:y2 examples/back-end/pattern_monomorphic_large.ml)
  (:y1 examples/back-end/pattern_monomorphic_small.ml)
  (:y0 examples/back-end/pattern_polymorphic.ml)
  (source_tree examples/back-end)
  (source_tree examples/back-end-embed)
  (source_tree examples/back-end/alternate_list)
  (source_tree examples/back-end/bench_patterns)
  (source_tree examples/back-end/bench_poly_and_mono)
  prelude.ml)
 (locks ../../global-lock)
 (action
  (progn
   (run ocaml-mdx test --prelude=prelude.ml --direction=to-md
     --non-deterministic %{x})
   (diff? %{x} %{x}.corrected)
   (diff? %{y9} %{y9}.corrected)
   (diff? %{y8} %{y8}.corrected)
   (diff? %{y7} %{y7}.corrected)
   (diff? %{y6} %{y6}.corrected)
   (diff? %{y5} %{y5}.corrected)
   (diff? %{y4} %{y4}.corrected)
   (diff? %{y3} %{y3}.corrected)
   (diff? %{y2} %{y2}.corrected)
   (diff? %{y1} %{y1}.corrected)
   (diff? %{y0} %{y0}.corrected))))
