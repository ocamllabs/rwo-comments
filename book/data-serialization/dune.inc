(rule
 (target findlib.conf)
 (action (write-file %{target} "")))

(alias
 (name   runtest)
 (deps   (:x README.md)
         (:conf findlib.conf)
         (package mdx)
         (package core)
         (package ppx_jane)
         (:y8 ../../examples/code/sexpr/int_interval_manual_sexp.mli)
         (:y7 ../../examples/code/sexpr/int_interval_nosexp.mli)
         (:y6 ../../examples/code/sexpr/read_foo/read_foo.ml)
         (:y5 ../../examples/code/sexpr/read_foo_better_errors/read_foo_better_errors.ml)
         (:y4 ../../examples/code/sexpr/sexp.mli)
         (:y3 ../../examples/code/sexpr/sexp_override.ml)
         (:y2 ../../examples/code/sexpr/test_interval/int_interval.ml)
         (:y1 ../../examples/code/sexpr/test_interval/int_interval.mli)
         (:y0 ../../examples/code/sexpr/test_interval/test_interval.ml)
         (source_tree ../../examples/code/sexpr)
         (source_tree ../../examples/code/sexpr/read_foo)
         (source_tree ../../examples/code/sexpr/read_foo_better_errors)
         (source_tree ../../examples/code/sexpr/test_interval)
         (source_tree ../../examples/code/sexpr/test_interval_nosexp)
         prelude.ml)
 (locks ../../global-lock)
 (action (progn
           (setenv OCAMLFIND_CONF %{conf} (run ocaml-mdx test --prelude=prelude.ml --direction=to-ml %{x}))
           (diff? %{y8} %{y8}.corrected)
           (diff? %{y7} %{y7}.corrected)
           (diff? %{y6} %{y6}.corrected)
           (diff? %{y5} %{y5}.corrected)
           (diff? %{y4} %{y4}.corrected)
           (diff? %{y3} %{y3}.corrected)
           (diff? %{y2} %{y2}.corrected)
           (diff? %{y1} %{y1}.corrected)
           (diff? %{y0} %{y0}.corrected)
           (diff? %{x} %{x}.corrected))))
(alias
 (name   runtest-all)
 (deps   (:x README.md)
         (:conf findlib.conf)
         (package mdx)
         (package core)
         (package ppx_jane)
         (:y8 ../../examples/code/sexpr/int_interval_manual_sexp.mli)
         (:y7 ../../examples/code/sexpr/int_interval_nosexp.mli)
         (:y6 ../../examples/code/sexpr/read_foo/read_foo.ml)
         (:y5 ../../examples/code/sexpr/read_foo_better_errors/read_foo_better_errors.ml)
         (:y4 ../../examples/code/sexpr/sexp.mli)
         (:y3 ../../examples/code/sexpr/sexp_override.ml)
         (:y2 ../../examples/code/sexpr/test_interval/int_interval.ml)
         (:y1 ../../examples/code/sexpr/test_interval/int_interval.mli)
         (:y0 ../../examples/code/sexpr/test_interval/test_interval.ml)
         (source_tree ../../examples/code/sexpr)
         (source_tree ../../examples/code/sexpr/read_foo)
         (source_tree ../../examples/code/sexpr/read_foo_better_errors)
         (source_tree ../../examples/code/sexpr/test_interval)
         (source_tree ../../examples/code/sexpr/test_interval_nosexp)
         prelude.ml)
 (locks ../../global-lock)
 (action (progn
           (setenv OCAMLFIND_CONF %{conf} (run ocaml-mdx test --prelude=prelude.ml --direction=to-ml --non-deterministic %{x}))
           (diff? %{y8} %{y8}.corrected)
           (diff? %{y7} %{y7}.corrected)
           (diff? %{y6} %{y6}.corrected)
           (diff? %{y5} %{y5}.corrected)
           (diff? %{y4} %{y4}.corrected)
           (diff? %{y3} %{y3}.corrected)
           (diff? %{y2} %{y2}.corrected)
           (diff? %{y1} %{y1}.corrected)
           (diff? %{y0} %{y0}.corrected)
           (diff? %{x} %{x}.corrected))))
